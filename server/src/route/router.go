package route

import (
	"github.com/gin-gonic/gin"
	"src/config"
	"src/controller/product"
	"src/route/middleware/exception"
	"src/route/middleware/jaeger"
	"src/route/middleware/logger"
	"src/route/middleware/signmd5"
	"src/util"

	//_ "github.com/swaggo/gin-swagger/example/basic/docs" // docs is generated by Swag CLI, you have to import it.
	"src/controller/api"
	_ "src/docs" /* doc files */
)

func InitRouter() *gin.Engine {
	gin.SetMode(config.Conf.AppMode)

	engine := gin.New()

	//设置路由中间件
	engine.Use(logger.SetUp(), exception.SetUp(), jaeger.SetUp())

	// 404
	engine.NoRoute(func(c *gin.Context) {
		utilGin := util.Gin{Ctx: c}
		utilGin.Response(404, "request not found", nil)
	})

	engine.GET("/ping", func(c *gin.Context) {
		utilGin := util.Gin{Ctx: c}
		utilGin.Response(1, "pong", nil)
	})

	// 测试链路追踪
	//engine.GET("jaeger_test",jaeger_conn.JaegerTest)

	// Simple group: v1
	v1 := engine.Group("api/v1")
	{
		v1.POST("/users/signin", api.SignIn)
		v1.POST("/users/register", api.Register)
		v1.GET("/users/:id", api.GetUser)
		v1.PUT("/users/:id", api.PutUser)
		v1.DELETE("/users/:id", api.DelUser)
		v1.GET("/users", api.GetUsers)
	}

	ProductRouter := engine.Group("/product").Use(signmd5.SetUp())
	{
		// 新增产品
		ProductRouter.POST("", product.Add)
		// 更新产品
		ProductRouter.PUT("/:id", product.Edit)
		// 删除产品
		ProductRouter.DELETE("/:id", product.Delete)
		// 获取产品详情
		ProductRouter.GET("/id", product.Detail)
	}
	//TODO 记录已超时的路由

	return engine
}
